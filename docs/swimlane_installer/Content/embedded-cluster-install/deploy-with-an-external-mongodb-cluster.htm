<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="mc-template-page: url('../Resources/MasterPages/OtherTopics.flmsp');">
    <head><title></title>
        <link href="../Resources/Stylesheets/MainStyles.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h1 id="deploy-with-an-external-mongodb-cluster">Deploy with an External MongoDB Cluster</h1>
        <p class="important"><strong>Important!</strong> Due to ongoing incompatibilities, Swimlane does not support using Amazon DocumentDB as an option for external MongoDB Cluster deployment.</p>
        <p class="important"><strong>Also Important!</strong> The physical location of the external Mongo deployment, as it pertains to latency between the Swimlane cluster and the standalone Mongo instance, performs best with a latency delay of less than 5 milliseconds. Be aware that with every added millisecond of latency, Swimlane's performance drops linearly.</p>
        <p>&#160;</p>
        <p>There are two primary deployment models for using an external MongoDB cluster with Swimlane:</p>
        <ul>
            <li>
                <p><a href="#self-hosted-mongodb-cluster">Self-Hosted MongoDB Cluster</a>
                </p>
            </li>
            <li>
                <p><a href="#mongodb-atlas">MongoDB Atlas</a>
                </p>
            </li>
        </ul>
        <h2 id="general-requirements">General Requirements</h2>
        <p>MongoDB version 4.4 is currently the only supported version for any external deployment.</p>
        <h2 id="self-hosted-mongodb-cluster">Self-Hosted MongoDB Cluster</h2>
        <p>Customer-maintained MongoDB clusters are supported as long as the external MongoDB cluster meets the requirements listed in the <a href="system-requirements-for-an-embedded-cluster-install/system-requirements-for-an-embedded-cluster-install.htm">System Requirements</a> for embedded clusters.</p>
        <p>To help with troubleshooting, Swimlane recommends that you name your databases <code>Swimlane</code> and <code>SwimlaneHistory</code> in your deployment. In each database, also create a <code>Swimlane</code> user and ensure that it is assigned the <code>dbOwner</code> role.</p>
        <h2 id="mongodb-atlas">MongoDB Atlas</h2>
        <p>You can use MongoDB Atlas as an external MongoDB cluster as long as the cluster has been configured to use a computer tier that aligns with the System Requirements for <a href="../existing-cluster-install/system-requirements-for-an-existing-cluster-install/system-requirements-for-an-existing-cluster-install.htm">Existing</a> or <a href="system-requirements-for-an-embedded-cluster-install/system-requirements-for-an-embedded-cluster-install.htm">Embedded</a> System Requirements page. Dedicated M40 clusters are the minimum compute tier required for an external MongoDB cluster.</p>
        <p>After creating your Atlas cluster, you must create two databases along with two users for those databases. Swimlane recommends that you name your databases <code>Swimlane</code> and <code>SwimlaneHistory</code> in your deployment. In each database, also create a <code>Swimlane</code> user.</p>
        <p>Users, databases, and roles are all managed through the Atlas UI. Atlas does not have a "dbOwner" role that would be used in self-hosted clusters. Instead, your created users should be assigned the specific advanced privileges <code>dbAdmin</code> and <code>readWrite</code>. Additionally, you can scope the permissions of each user to their respective databases, although it is not required.</p>
        <p class="note"><strong>Note</strong> The built-in role "Read and write to any database" is not sufficient, as Swimlane requires the ability to create indexes in MongoDB, which is a dbAdmin privilege.</p>
        <h2 id="configuring-external-mongo-in-the-swimlane-platform-installer">Configuring External Mongo in the Swimlane Platform Installer</h2>
        <p>When you select the <strong>Use an external MongoDB deployment</strong> option, the SPI UI hides all of the embedded mongo options and displays these sections <strong>MongoDB Swimlane Database Settings</strong> and <strong>MongoDB Swimlane History Database Settings</strong>.</p>
        <p>
            <img src="../Resources/Images/external_mongo_settings.png" alt="" />
        </p>
        <p>Both of these sections set their respective database's configuration and contain the same options as described here:</p>
        <p><strong>MongoDB prefix:</strong> Describes the prefix of the MongoDB connection string. The default value is <code>mongodb://</code>, however <code>mongodb+srv://</code> is also a valid prefix. This prefix is common when using MongoDB Atlas.</p>
        <p><strong>MongoDB username:</strong> The username for the user associated with the relevant database that is being configured, either <em>Swimlane</em> or <em>SwimlaneHistory</em>.</p>
        <p><strong>MongoDB Password:</strong> The password for the user associated with the relevant database that's being configured, either <em>Swimlane</em> or <em>SwimlaneHistory</em>.</p>
        <p><strong>MongoDB hostname list:</strong> The hostname or set of hostnames for the MongoDB cluster. For multi-node clusters, this is usually in the form of a comma-separated list of hostnames and ports. In Atlas deployments, this can be the SRV record for the cluster provided by the Atlas UI.</p>
        <p><strong>MongoDB database:</strong> The database name relevant to the database that's being configured, either <em>Swimlane</em> or <em>SwimlaneHistory</em>.</p>
        <p><strong>Upload TLS certificates to use in the MongoDB connection URI options:</strong> Enables the uploading of a CA certificate if the MongoDB cluster uses an internal CA.</p>
        <p><strong>MongoDB connection options:</strong> Provides additional options to the connection string. Currently, the <strong>only</strong> supported options are <code>ssl</code> and <code>sslVerifyCertificates</code>.</p>
    </body>
</html>