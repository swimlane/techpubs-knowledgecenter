<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="mc-template-page: url('../../Resources/MasterPages/OtherTopics.flmsp');">
    <head><title></title>
        <link href="../../Resources/Stylesheets/MainStyles.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h1 id="gcp-tcp-load-balancer">GCP TCP Load Balancer</h1>
        <p>This topic explains how to use an GCP TCP Load Balancer (Layer 4) for your Swimlane deployment.</p>
        <h2 id="architecture-diagram">Architecture Diagram</h2>
        <p>
            <img src="../../Resources/Images/gcp-tcp-load-balancer-diagram.png" alt="" />
        </p>
        <h2 id="create-an-unmanaged-instance-group" target="_blank_">Create an Unmanaged Instance Group</h2>
        <p target="_blank_">To create an <a href="https://cloud.google.com/compute/docs/instance-groups?hl=en">unmanaged instance group</a>:</p>
        <ul>
            <li>Set a name for the Instance Group</li>
            <li>Set the region and the zone to where the Swimlane VM instances live</li>
            <li>Set the network to where the Swimlane VM instances live</li>
            <li>Add your first Swimlane primary in the VM instances drop-down</li>
        </ul>
        <h2 id="create-a-tcp-load-balancer" target="_blank_">Create a TCP Load Balancer:</h2>
        <p target="_blank_">To create a <a href="https://cloud.google.com/load-balancing/docs/network">TCP load balancer</a>:</p>
        <ul>
            <li>
                <p>For Internet facing or internal only set <code>From Internet to my VMs</code></p>
            </li>
            <li>
                <p>For Multiple regions or single region set <code>Single region only</code></p>
            </li>
            <li>
                <p>For Backend type set <code>Backend Service</code></p>
            </li>
            <li>
                <p>Create a Backend Configuration</p>
                <ul>
                    <li>Set the region to where the Swimlane instances live</li>
                    <li>Select your Instance Group that contains the first Swimlane SPI VM</li>
                    <li>Under the health check drop-down select an existing health check or <code>Create another health check</code><ul><li>Set a name for the health check</li><li>Set the protocol to <code>TCP</code></li><li>Set the port to <code>6443</code></li><li>Unless needed per your organization's requirements, leave the defaults for the remaining settings</li></ul></li>
                </ul>
            </li>
            <li>
                <p>Create a Frontend Configuration</p>
                <ul>
                    <li>
                        <p>Set the Network Service Tier per your requirements</p>
                    </li>
                    <li>
                        <p>Create a new reserved IP address or use an existing one</p>
                    </li>
                    <li>
                        <p>Set Ports to <code>Multiple</code></p>
                    </li>
                    <li>
                        <p>Set the port to <code>6443,8800,443,80</code></p>
                    </li>
                    <li>
                        <p>Create the load balancer</p>
                    </li>
                    <li>
                        <p>After Swimlane has been installed on the additional nodes they need to be added to this target group.</p>
                    </li>
                </ul>
            </li>
        </ul>
        <h3>Notes</h3>
        <p>After the initial install is done, you will need to join any additional primaries to the Swimlane cluster before adding them to the Instance Group in use by your load balancer to ensure the join script runs successfully. If you want a multi-zonal deployment, you can create additional Unmanaged Instance Groups and put your other Swimlane primaries in them.</p>
        <h2 id="adding-backend-configuration-for-nodeport-services">Adding Backend Configuration for NodePort services</h2>
        <p>Due to GCP's workaround for hairpinning, traffic may blackhole when attempting to access NodePorts through the load balancer. This is because GCP automatically routes traffic destined for the load balancer to the loopback address of the VM the request was forwarded to, and kube-proxy does not listen on localhost. To workaround this and successfully access NodePorts through the load balancer, you will need to create an alias for the primary network interface that resolves to the load balancer's IP address e.g., <code>ifconfig eth0:0 &lt;lb-ip&gt; netmask 255.255.255.255 up</code> on each node in the Swimlane cluster. To persist these changes you will need to add them to your network interfaces configuration file.</p>
        <h2 id="firewall-rules">Firewall Rules</h2>
        <p>For GCP Load Balancers, ingress port access is defined in the Firewall section of your GCP Project's VPC Network. For more information about the port requirements see the External Access section of the <a href="../system-requirements-for-an-embedded-cluster-install/system-requirements-for-an-embedded-cluster-install.htm">System Requirements for an Embedded Cluster Installation</a>.</p>
        <h2 id="swimlane-configuration">Swimlane Configuration</h2>
        <p>Be sure to enable the <code>Enable the Ingress Controller</code> option on the Swimlane Platform Installer UI config tab.</p>
    </body>
</html>