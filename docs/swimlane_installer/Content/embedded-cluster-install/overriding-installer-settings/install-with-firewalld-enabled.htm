<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="mc-template-page: url('../../Resources/MasterPages/OtherTopics.flmsp');">
    <head><title></title>
        <link href="../../Resources/Stylesheets/MainStyles.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h1 id="install-with-firewalld-enabled">Install with Firewalld Enabled</h1>
        <p>By default, the installer requires that Firewalld is disabled before continuing. If you need to leave Firewalld enabled you can add a flag (under the firewalldConfig spec) to the installer-override.yaml patch file <code>spec:</code> section.</p>
        <p>For example:</p>
        <MadCap:codeSnippet>
            <codeSnippetCopyButton />
            <codeSnippetBody>apiVersion: cluster.kurl.sh/v1beta1
kind: Installer
metadata:
  name: "patch"
spec:
  firewalldConfig:
    bypassFirewalldWarning: true
</codeSnippetBody>
        </MadCap:codeSnippet>
        <h2 id="configuring-firewalld">Configuring Firewalld</h2>
        <p>The required ports for cluster node communication need to be open in the Firewalld config on each node in the cluster. For more information see <a href="../system-requirements-for-an-embedded-cluster-install/system-requirements-for-an-embedded-cluster-install.htm">System Requirements for an Embedded Cluster Install</a>.</p>
        <p>Here is an example script for configuring Firewalld in CentOS 7/RHEL 7 environments:</p>
        <MadCap:codeSnippet>
            <codeSnippetCopyButton />
            <codeSnippetBody>#!/bin/bash
echo 'net.ipv4.ip_forward = 1' | tee -a /etc/sysctl.conf;

sysctl -p;

firewall-cmd --permanent --zone=external --add-masquerade;

firewall-cmd --permanent --zone=trusted --add-interface=cni0;

# SSH Port
firewall-cmd --permanent --zone=public --add-rich-rule='
  rule family="ipv4"
  port protocol="tcp" port="22" accept';

# HTTP Port (optional - used to redirect to HTTPS)
firewall-cmd --permanent --zone=public --add-rich-rule='
  rule family="ipv4"
  port protocol="tcp" port="80" accept';

# HTTPS Port
firewall-cmd --permanent --zone=public --add-rich-rule='
  rule family="ipv4"
  port protocol="tcp" port="443" accept';

# Kubernetes etcd Port
firewall-cmd --permanent --zone=public --add-rich-rule='
  rule family="ipv4"
  port protocol="tcp" port="2379-2380" accept';

# Kubernetes API Port
firewall-cmd --permanent --zone=public --add-rich-rule='
  rule family="ipv4"
  port protocol="tcp" port="6443" accept';

# Flannel VXLAN Port
firewall-cmd --permanent --zone=public --add-rich-rule='
  rule family="ipv4"
  port protocol="udp" port="8472" accept';

# KOTS UI Port
firewall-cmd --permanent --zone=public --add-rich-rule='
  rule family="ipv4"
  port protocol="tcp" port="8800" accept';

# Kubernetes Component (kubelet, kube-scheduler, kube-controller) Ports
firewall-cmd --permanent --zone=public --add-rich-rule='
  rule family="ipv4"
  port protocol="tcp" port="10250-10252" accept';

firewall-cmd --reload
</codeSnippetBody>
        </MadCap:codeSnippet>
        <p>If you wish to open additional ports after the Swimlane deployment (e.g. Syslog Receiver, External Mongo ports) see below:</p>
        <p><code>kubectl get svc -o wide</code>
        </p>
        <MadCap:codeSnippet>
            <codeSnippetCopyButton />
            <codeSnippetBody>NAME                           TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)           AGE    SELECTOR
kotsadm                        ClusterIP   10.96.3.36    &lt;none&gt;        3000/TCP          3d     app=kotsadm
kotsadm-postgres               ClusterIP   10.96.3.188   &lt;none&gt;        5432/TCP          3d     app=kotsadm-postgres
kubernetes                     ClusterIP   10.96.0.1     &lt;none&gt;        443/TCP           3d1h   &lt;none&gt;
kurl-proxy-kotsadm             NodePort    10.96.1.64    &lt;none&gt;        8800:8800/TCP     3d     app=kurl-proxy-kotsadm
sw-api                         ClusterIP   10.96.2.47    &lt;none&gt;        5000/TCP          3d     service=swimlane-api
sw-web                         ClusterIP   10.96.2.67    &lt;none&gt;        443/TCP           3d     service=swimlane-web
swimlane-chrome                ClusterIP   10.96.3.32    &lt;none&gt;        4444/TCP          3d     service=swimlane-chrome
swimlane-sw-mongo              ClusterIP   None          &lt;none&gt;        27017/TCP         3d     app=sw-mongo,release=swimlane
swimlane-sw-mongo-0-external   NodePort    10.96.0.224   &lt;none&gt;        27017:35246/TCP   3d     statefulset.kubernetes.io/pod-name=swimlane-sw-mongo-0
swimlane-sw-mongo-1-external   NodePort    10.96.1.229   &lt;none&gt;        27017:6239/TCP    3d     statefulset.kubernetes.io/pod-name=swimlane-sw-mongo-1
swimlane-sw-mongo-2-external   NodePort    10.96.0.104   &lt;none&gt;        27017:36278/TCP   3d     statefulset.kubernetes.io/pod-name=swimlane-sw-mongo-2
swimlane-syslog-receiver       NodePort    10.96.2.119   &lt;none&gt;        514:42750/UDP     3d     service=swimlane-syslog-receiver
</codeSnippetBody>
        </MadCap:codeSnippet>
        <p>The ports from the example output above will be different for every deployment. Run these commands to create firewall exceptions:</p>
        <p>TCP ports 35246, 6239, 36278 have been assigned to our MongoDB service for external access:</p>
        <MadCap:codeSnippet>
            <codeSnippetCopyButton />
            <codeSnippetBody>sudo firewall-cmd --permanent --zone=public --add-rich-rule='rule family="ipv4" port protocol="tcp" port="35246" accept'
sudo firewall-cmd --permanent --zone=public --add-rich-rule='rule family="ipv4" port protocol="tcp" port="6239" accept'
sudo firewall-cmd --permanent --zone=public --add-rich-rule='rule family="ipv4" port protocol="tcp" port="36278" accept'
</codeSnippetBody>
        </MadCap:codeSnippet>
        <p>UDP port 42750 has been assigned to our Swimlane Syslog Receiver service:</p>
        <MadCap:codeSnippet>
            <codeSnippetCopyButton />
            <codeSnippetBody>sudo firewall-cmd --permanent --zone=public --add-rich-rule='rule family="ipv4" port protocol="udp" port="42750" accept'
</codeSnippetBody>
        </MadCap:codeSnippet>
        <p>Restart firewalld:</p>
        <MadCap:codeSnippet>
            <codeSnippetCopyButton />
            <codeSnippetBody>sudo firewall-cmd --reload
</codeSnippetBody>
        </MadCap:codeSnippet>
        <p>See <a href="overriding-installer-settings.htm">Overriding Installer Settings</a> for instructions on how to specify the installer override file during the install and join node commands.</p>
    </body>
</html>