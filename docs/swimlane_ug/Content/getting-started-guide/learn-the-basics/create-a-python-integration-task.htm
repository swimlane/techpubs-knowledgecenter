<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" style="mc-template-page: url('../../Resources/MasterPages/OtherTopics.flmsp');">
    <head>
        <link href="../../Resources/TableStyles/Alternate-Row-Color.css" rel="stylesheet" MadCap:stylesheetType="table" /><title></title>
        <link href="../../Resources/Stylesheets/MainStyles.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h1 id="create-a-python-integration-task">Create a Python Integration Task</h1>
        <p>One of the most powerful features in Swimlane is the ability to kick off an automation task. In this section you will create a simple Python task that you'll be able to launch via the click of a button and automatically. You will not only kick it off, but also pass a value from your record into the script, manipulate it, then pass the results back to your record.</p>
        <p>The task you create will:</p>
        <ul>
            <li>Receive an input from a field in a record.</li>
            <li>Modify a variable of that field.</li>
            <li>Output the modified variable back to a record.</li>
        </ul>
        <h2 id="create-a-task">Create a Task</h2>
        <p>To create a python integration task:</p>
        <ol>
            <li>
                <p>From the global navigation menu in Swimlane select <strong>Integrations</strong>.</p>
                <p>
                    <img src="../../Resources/Images/integration-button.png" alt="" />
                </p>
            </li>
            <li>
                <p>From the Integrations taskbar, click the plus menu icon, or <strong>New Task</strong>, and then select <strong>Create a Task</strong>.</p>
                <p>
                    <img src="../../Resources/Images/create-new-task.png" alt="" />
                </p>
            </li>
            <li>
                <p>When you create a new task, you need to specify the assets the task will use. Filter for <strong>Python</strong> and locate the Python 3.6 plugin action.</p>
            </li>
            <li>
                <p>Next, click <strong>Create</strong> at the end of the Python 3.6 plugin action to begin creating the task.</p>
                <p>
                    <img src="../../Resources/Images/new-python-task.png" alt="" />
                </p>
            </li>
            <li>
                <p>Name your new task, and then associate it to your new application.</p>
                <p>
                    <img src="../../Resources/Images/my-new-task.png" alt="" />
                </p>
            </li>
            <li>
                <p>On Create a Task, click <strong>Save</strong>.</p>
                <p>You now have a Python task associated to your application.</p>
            </li>
            <li>
                <p>The task opens with the General tab. Enter a description on this tab, if you'd like, then click Configuration.</p>
                <p>
                    <img src="../../Resources/Images/python-task.png" alt="" />
                </p>
                <p>In the next sub-task, you'll specify the code and the field inputs for your Python integration task.</p>
            </li>
        </ol>
        <h2 id="configure-and-map-inputs-to-the-task">Configure and Map Inputs to the Task</h2>
        <ol>
            <li>On Configuration, enter the following Python code:</li>
        </ol>
        <MadCap:codeSnippet>
            <codeSnippetCopyButton />
            <codeSnippetBody style="mc-code-lang:Python;">my_input_var = sw_context.inputs['text']
my_input_var = my_input_var + " is the best"
sw_outputs = [{'output': my_input_var}]
</codeSnippetBody>
        </MadCap:codeSnippet>
        <p>
            <img src="../../Resources/Images/configuration-python-code.png" alt="" />
        </p>
        <p>Next, you set up Swimlane to grab the value of the <strong>Text (2)</strong> field when the task runs. You do this by specifying an input mapping.</p>
        <ol start="2">
            <li>
                <p>Below the Configuration window, under Inputs, click <strong>Add Parameter,</strong> then add the values shown here:</p>
                <p>
                    <img src="../../Resources/Images/input-variable-type-field.png" alt="" />
                </p>
            </li>
            <li>
                <p>Click <strong>Save</strong>.</p>
                <p>Next, you map a value from your Python script back to a Swimlane record, also known as creating an output mapping.</p>
            </li>
        </ol>
        <h2 id="map-the-outputs-from-the-task">Map the Outputs from the Task</h2>
        <ol>
            <li>
                <p>Click the Outputs tab. For this exercise, you'll be creating output mapping to update a current record. Click <strong>Update Current Record.</strong></p>
                <p>
                    <img src="../../Resources/Images/update-current-record.png" alt="" />
                </p>
                <p>If you're interested in learning more about other ways to map output, see <a href="../../administrator-guide/integrations/configure-task-output/configure-task-output.htm">Configure Task Output</a>.</p>
            </li>
            <li>
                <p>On the next screen, which asks you, "How would you like to proceed?" select <strong>Map to Existing Fields.</strong></p>
                <p>
                    <img src="../../Resources/Images/qs-map-to-existing-fields.png" alt="" />
                </p>
                <p>Click through the next screen, which provides you with introduction to mapping.</p>
                <p>
                    <img src="../../Resources/Images/the_basics.png" alt="" />
                </p>
            </li>
            <li>
                <p>On Update Current Record for your new application, note that multiple fields have been identified as potential parameters. For this exercise, you don't need to map those parameters, but instead to create a new one.</p>
                <p>Place your cursor in the text field preceded by the words <strong>Add new output mapping for ...</strong> and type "output" then click the adjacent plus (<strong>+</strong>) sign.</p>
                <p>
                    <img src="../../Resources/Images/output-plus.png" alt="" />
                </p>
            </li>
            <li>
                <p>The output parameter is now available above. You need to map the parameter to a field, so from the <strong>App Field / Field Type</strong> pull down, select Description.</p>
                <p>
                    <img src="../../Resources/Images/add-mappings-to-app.png" alt="" />
                </p>
            </li>
            <li>
                <p>Click <strong>Add Mappings to App.</strong></p>
            </li>
            <li>
                <p>On Approve Field Creation and Mappings, review the mapping, and then click <strong>Approve.</strong></p>
                <p>
                    <img src="../../Resources/Images/approve-fields-and-mappings.png" alt="" />
                </p>
            </li>
            <li>
                <p>From the Integration task bar, click <strong>Save.</strong></p>
                <p>Next you'll set a trigger that will make the task run.</p>
            </li>
        </ol>
        <h2 id="set-a-trigger-for-the-task">Set a Trigger for the Task</h2>
        <p>There are three ways to set triggers in Swimlane:</p>
        <table style="mc-table-style: url('../../Resources/TableStyles/Alternate-Row-Color.css');" class="TableStyle-Alternate-Row-Color" cellspacing="21">
            <thead>
                <tr class="TableStyle-Alternate-Row-Color-Head-Header1">
                    <th style="text-align: left;" class="TableStyle-Alternate-Row-Color-HeadE-Column1-Header1">Trigger Type</th>
                    <th style="text-align: left;" class="TableStyle-Alternate-Row-Color-HeadE-Column1-Header1">Sub-type</th>
                    <th style="text-align: left;" class="TableStyle-Alternate-Row-Color-HeadD-Column1-Header1">Definition</th>
                </tr>
            </thead>
            <tbody>
                <tr class="TableStyle-Alternate-Row-Color-Body-Body1">
                    <td style="text-align: left;" class="TableStyle-Alternate-Row-Color-BodyE-Column1-Body1"><strong>Automatic:</strong>
                    </td>
                    <td style="text-align: left;" class="TableStyle-Alternate-Row-Color-BodyE-Column1-Body1">Scheduled</td>
                    <td style="text-align: left;" class="TableStyle-Alternate-Row-Color-BodyD-Column1-Body1">The trigger is scheduled, like a cron job. You specify how often the trigger is activated - minutely, hourly, daily, etc. This method is most commonly used when a task is collecting records from a database, slack channel, or email inbox, for example.</td>
                </tr>
                <tr class="TableStyle-Alternate-Row-Color-Body-Body2">
                    <td style="text-align: left;" class="TableStyle-Alternate-Row-Color-BodyE-Column1-Body2" />
                    <td style="text-align: left;" class="TableStyle-Alternate-Row-Color-BodyE-Column1-Body2">Email</td>
                    <td style="text-align: left;" class="TableStyle-Alternate-Row-Color-BodyD-Column1-Body2">The trigger is activated upon email receipt.</td>
                </tr>
                <tr class="TableStyle-Alternate-Row-Color-Body-Body1">
                    <td style="text-align: left;" class="TableStyle-Alternate-Row-Color-BodyE-Column1-Body1" />
                    <td style="text-align: left;" class="TableStyle-Alternate-Row-Color-BodyE-Column1-Body1">Record Save</td>
                    <td style="text-align: left;" class="TableStyle-Alternate-Row-Color-BodyD-Column1-Body1">The trigger is activated when a record is saved.</td>
                </tr>
                <tr class="TableStyle-Alternate-Row-Color-Body-Body2">
                    <td style="text-align: left;" class="TableStyle-Alternate-Row-Color-BodyE-Column1-Body2"><strong>Workflow</strong>
                    </td>
                    <td style="text-align: left;" class="TableStyle-Alternate-Row-Color-BodyE-Column1-Body2" />
                    <td style="text-align: left;" class="TableStyle-Alternate-Row-Color-BodyD-Column1-Body2">The trigger is activated automatically when built into the workflow stages and actions.</td>
                </tr>
                <tr class="TableStyle-Alternate-Row-Color-Body-Body1">
                    <td style="text-align: left;" class="TableStyle-Alternate-Row-Color-BodyB-Column1-Body1"><strong>Manual</strong>
                    </td>
                    <td style="text-align: left;" class="TableStyle-Alternate-Row-Color-BodyB-Column1-Body1" />
                    <td style="text-align: left;" class="TableStyle-Alternate-Row-Color-BodyA-Column1-Body1">The trigger is activated when the user manually pushes a button.</td>
                </tr>
            </tbody>
        </table>
        <p>For this exercise, we are creating a manual trigger.</p>
        <p>To set a trigger for the task:</p>
        <ol>
            <li>
                <p>Click the Triggers tab.</p>
                <p>
                    <img src="../../Resources/Images/triggers-tab.png" alt="" />
                </p>
            </li>
            <li>
                <p>Click the Triggers, Manual tab, then click <strong>Open Application Builder.</strong></p>
                <p>
                    <img src="../../Resources/Images/triggers-manual.png" alt="" />
                </p>
                <p>Application Builder opens your application, where you will associate the Python task to the application.</p>
            </li>
            <li>
                <p>Select the Integration field in the Application Form Layout, then access the App Settings.</p>
                <p>On App Settings, access the Task dropdown and select your Python task, then click <strong>Save.</strong></p>
                <p>
                    <img src="../../Resources/Images/app-settings-task-dropdown.png" alt="" />
                </p>
                <p>On App Settings, you can also specify the size of the Integration button in a record. The example here is 100%.</p>
                <p>Now you're ready to test your automation.</p>
            </li>
        </ol>
        <h2 id="related-links">Related Links</h2>
        <p><a href="../../administrator-guide/integrations/configure-task-input.htm#Review">Configurations and Input Mapping</a>
        </p>
        <p><a href="../../administrator-guide/integrations/configure-task-output/configure-task-output.htm">Output Mapping</a>
        </p>
        <p><a href="../../administrator-guide/integrations/create-or-edit-a-task.htm">Tasks</a>
        </p>
        <p><a href="../../administrator-guide/integrations/create-or-edit-a-task.htm#Set">Triggers</a>
        </p>
        <p><a href="../../administrator-guide/workflow/workflow.htm">Workflow</a>
        </p>
    </body>
</html>